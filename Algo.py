import streamlit as st
import pandas as pd
import Gfile as gf

def find_positions(value, data, col_name):
    if col_name not in data.columns or data.empty:
        st.error(f"‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá ho·∫∑c thi·∫øu c·ªôt '{col_name}'.")
        return None
    for i in range(len(data) - 1):
        lower = data[col_name].iloc[i]
        upper = data[col_name].iloc[i + 1]
        if min(lower, upper) <= value <= max(lower, upper):
            return data['V·ªã tr√≠'].iloc[i], data['V·ªã tr√≠'].iloc[i + 1]
    return None

def findx(dis, dataframe, role_name, col_name):
    if dis:
        result = find_positions(dis, dataframe, col_name)
        if result:
            st.info(f"üîç Kho·∫£ng c√°ch r∆° le {role_name} t∆∞∆°ng ƒë∆∞∆°ng kho·∫£ng c·ªôt {result[0]} - {result[1]}.")
        else:
            st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y kho·∫£ng ph√π h·ª£p v·ªõi gi√° tr·ªã ƒë√£ nh·∫≠p.")
        return result
    return None


def info(df, result, role_name):
    if not result:
        st.warning(f"‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu k·∫øt qu·∫£ ƒë·ªÉ hi·ªÉn th·ªã cho {role_name}.")
        return
    if 'V·ªã tr√≠' not in df.columns:
        st.error("‚ùå File th√¥ng tin c·ªôt thi·∫øu c·ªôt 'V·ªã tr√≠'.")
        return
    get_col=df.query("`V·ªã tr√≠` in @result")[['V·ªã tr√≠', 'C√¥ng d·ª•ng c·ªôt','Th·ª© t·ª± pha','Lo·∫°i c·ªôt','Chi·ªÅu cao c·ªôt','Lo·∫°i d√¢y d·∫´n','Lo·∫°i c√°p quang','Lo·∫°i ti·∫øp ƒë·ªãa','Lo·∫°i c√°ch ƒëi·ªán','H√†nh lang']]
    st.write(get_col.T)
 

def process(subs, df):
    col_name=gf.ass_col_name(subs)
    st.header(f"üìã{subs}")
    st.markdown("---")
    dis87_2 = st.number_input(f"üî¢ Nh·∫≠p kho·∫£ng c√°ch s·ª± c·ªë F87/{subs}:", min_value=0)
    dis21_2 = st.number_input(f"üî¢ Nh·∫≠p kho·∫£ng c√°ch s·ª± c·ªë F21/{subs}:", min_value=0)
    result_87 = findx(dis87_2, df, "F87", col_name)
    if result_87:
        info(df, result_87, "F87")
    result_21 = findx(dis21_2, df, "F21", col_name)
    if result_21:
        info(df, result_21, "F21")

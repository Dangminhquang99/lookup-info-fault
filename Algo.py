import streamlit as st
import pandas as pd
import config as cf


#==============H√†m t√¨m gi√° tr·ªã==============
def find_positions(value, data):
    for i in range(len(data) - 1):
        lower = data['L≈©y k·∫ø'].iloc[i]
        upper = data['L≈©y k·∫ø'].iloc[i + 1]
        if min(lower, upper) <= value <= max(lower, upper):
            return data['V·ªã tr√≠'].iloc[i], data['V·ªã tr√≠'].iloc[i + 1]
    return None

#=================T√¨m v√† hi·ªÉn th·ªã k·∫øt qu·∫£ F87=================================
def findx (dis,dataframe,role_name):
    if dis:
        result = find_positions(dis, dataframe)
        if result:
            st.info(f"üîç Kho·∫£ng c√°ch r∆° le {role_name} t∆∞∆°ng ƒë∆∞∆°ng kho·∫£ng c·ªôt {result[0]} - {result[1]}.")
        else:
            st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y kho·∫£ng ph√π h·ª£p v·ªõi gi√° tr·ªã ƒë√£ nh·∫≠p.")
    return result
            
#=================T√¨m th√¥ng tin v·ªã tr√≠ t∆∞∆°ng ·ª©ng====================================
def info (dataframe, result,role_name):
    if 'VITRI' not in dataframe.columns:
        st.error("‚ùå File th√¥ng tin c·ªôt thi·∫øu c·ªôt 'VITRI'.")
    else:
        v1, v2 = result  #G√°n bi·∫øn result[1,2] sang bi·∫øn v1, v2 
        selected_rows = dataframe[dataframe['VITRI'].isin([v1, v2])] #h√†m isin gi·ªØ l·∫°i h√†ng ch·ª©a gi√° tr·ªã v1, v2. So sanh v1 v2 v·ªõi gi√° tr·ªã ·ªü c·ªôt VITRI, n·∫øu tr√πng th√¨ l√† true, kh√¥ng th√¨ s·∫Ω l√† false
        if selected_rows.empty:
            st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin t∆∞∆°ng ·ª©ng trong file th√¥ng tin.")
        else:
            st.subheader(f"üìã Th√¥ng tin chi ti·∫øt c√°c c·ªôt theo {role_name}:")
            st.table(selected_rows)
            
            
            
            
            
            
            
        

      
#         # df_info = pd.read_excel("data/Tke_krb.xlsx")
#         #         #Thong tin vi tri theo F87
        # if 'VITRI' not in df_info.columns:
#         #      st.error("‚ùå File th√¥ng tin c·ªôt thi·∫øu c·ªôt 'VITRI'.")
#         # else:
#         #     # L·ªçc ra th√¥ng tin c·ªßa 2 v·ªã tr√≠
#         #     v1, v2 = result87  # v√≠ d·ª•: 247, 248
#         #     selected_rows = df_info[df_info['VITRI'].isin([v1, v2])]
#         #     if selected_rows.empty:
#         #         st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin t∆∞∆°ng ·ª©ng trong file th√¥ng tin.")
#         #     else:
#         #         st.subheader("üìã Th√¥ng tin chi ti·∫øt c√°c c·ªôt theo F87:")
#         #         st.table(selected_rows)
                
#         # #Thong tin vi tri theo F21
#         # if 'VITRI' not in df_info.columns:
#         #      st.error("‚ùå File th√¥ng tin c·ªôt thi·∫øu c·ªôt 'VITRI'.")
#         # else:
#         #     # L·ªçc ra th√¥ng tin c·ªßa 2 v·ªã tr√≠
#         #     v1, v2 = result21  # v√≠ d·ª•: 247, 248
#         #     selected_rows = df_info[df_info['VITRI'].isin([v1, v2])]
#         #     if selected_rows.empty:
#         #         st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin t∆∞∆°ng ·ª©ng trong file th√¥ng tin.")
#         #     else:
#         #         st.subheader("üìã Th√¥ng tin chi ti·∫øt c√°c c·ªôt theo F21:")
#         #         st.table(selected_rows)                   
# except Exception as e:
#         st.error(f"‚ùå L·ªói khi ƒë·ªçc file: {e}")
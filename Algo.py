import streamlit as st
import pandas as pd
import config as cf

def find_positions(value, data):
    if 'L≈©y k·∫ø' not in data.columns or data.empty:
        st.error("‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá ho·∫∑c thi·∫øu c·ªôt 'L≈©y k·∫ø'.")
        return None
    for i in range(len(data) - 1):
        lower = data['L≈©y k·∫ø'].iloc[i]
        upper = data['L≈©y k·∫ø'].iloc[i + 1]
        if min(lower, upper) <= value <= max(lower, upper):
            return data['V·ªã tr√≠'].iloc[i], data['V·ªã tr√≠'].iloc[i + 1]
    return None

def findx(dis, dataframe, role_name):
    if dis:
        result = find_positions(dis, dataframe)
        if result:
            st.info(f"üîç Kho·∫£ng c√°ch r∆° le {role_name} t∆∞∆°ng ƒë∆∞∆°ng kho·∫£ng c·ªôt {result[0]} - {result[1]}.")
        else:
            st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y kho·∫£ng ph√π h·ª£p v·ªõi gi√° tr·ªã ƒë√£ nh·∫≠p.")
        return result
    return None

def info(dataframe, result, role_name):
    if not result:
        st.warning(f"‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu k·∫øt qu·∫£ ƒë·ªÉ hi·ªÉn th·ªã cho {role_name}.")
        return
    if 'VITRI' not in dataframe.columns:
        st.error("‚ùå File th√¥ng tin c·ªôt thi·∫øu c·ªôt 'VITRI'.")
        return

    v1, v2 = result
    selected_rows = dataframe[dataframe['VITRI'].isin([v1, v2])]
    if selected_rows.empty:
        st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin t∆∞∆°ng ·ª©ng trong file th√¥ng tin.")
    else:
        st.subheader(f"üìã Th√¥ng tin chi ti·∫øt c√°c c·ªôt theo {role_name}:")
        st.table(selected_rows)
